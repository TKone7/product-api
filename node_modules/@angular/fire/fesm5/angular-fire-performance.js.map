{"version":3,"file":"angular-fire-performance.js","sources":["ng://@angular/fire/performance/performance.ts","ng://@angular/fire/performance/performance.module.ts"],"sourcesContent":["import { Injectable, NgZone, ApplicationRef, InjectionToken, Inject, Optional, PLATFORM_ID } from '@angular/core';\nimport { Observable, Subscription, of, empty } from 'rxjs';\nimport { first, tap, map, shareReplay, switchMap } from 'rxjs/operators';\nimport { performance } from 'firebase/app';\nimport { FirebaseApp, ɵPromiseProxy, ɵlazySDKProxy } from '@angular/fire';\nimport { isPlatformBrowser } from '@angular/common';\n\n// SEMVER @ v6, drop and move core ng metrics to a service\nexport const AUTOMATICALLY_TRACE_CORE_NG_METRICS = new InjectionToken<boolean>('angularfire2.performance.auto_trace');\nexport const INSTRUMENTATION_ENABLED = new InjectionToken<boolean>('angularfire2.performance.instrumentationEnabled');\nexport const DATA_COLLECTION_ENABLED = new InjectionToken<boolean>('angularfire2.performance.dataCollectionEnabled');\n\nexport interface AngularFirePerformance extends Omit<ɵPromiseProxy<performance.Performance>, 'trace'> {};\n\nexport type TraceOptions = {\n  metrics?: {[key:string]: number},\n  attributes?: {[key:string]:string},\n  attribute$?: {[key:string]:Observable<string>},\n  incrementMetric$?: {[key:string]: Observable<number|void|null|undefined>},\n  metric$?: {[key:string]: Observable<number>}\n};\n\n@Injectable({\n  providedIn: 'any'\n})\nexport class AngularFirePerformance {\n  \n  private readonly performance: Observable<performance.Performance>;\n\n  constructor(\n    app: FirebaseApp,\n    @Optional() @Inject(AUTOMATICALLY_TRACE_CORE_NG_METRICS) automaticallyTraceCoreNgMetrics:boolean|null,\n    @Optional() @Inject(INSTRUMENTATION_ENABLED) instrumentationEnabled:boolean|null,\n    @Optional() @Inject(DATA_COLLECTION_ENABLED) dataCollectionEnabled:boolean|null,\n    appRef: ApplicationRef,\n    private zone: NgZone,\n    @Inject(PLATFORM_ID) platformId:Object\n  ) {\n\n    this.performance = of(undefined).pipe(\n      switchMap(() => isPlatformBrowser(platformId) ? zone.runOutsideAngular(() => import('firebase/performance')) : empty()),\n      map(() => zone.runOutsideAngular(() => app.performance())),\n      tap(performance => {\n        if (instrumentationEnabled == false) { performance.instrumentationEnabled = false }\n        if (dataCollectionEnabled == false) { performance.dataCollectionEnabled = false }\n      }),\n      shareReplay({ bufferSize: 1, refCount: false }),\n    );\n\n    if (automaticallyTraceCoreNgMetrics != false) {\n\n      // TODO determine more built in metrics\n      // this leaks... move to a service?\n      appRef.isStable.pipe(\n        first(it => it),\n        this.traceUntilComplete('isStable')\n      ).subscribe();\n\n    }\n\n    return ɵlazySDKProxy(this, this.performance, zone);\n\n  }\n\n  private readonly trace$ = (name:string, options?: TraceOptions) =>\n    this.performance.pipe(\n      switchMap(performance =>\n        new Observable<void>(emitter =>\n          this.zone.runOutsideAngular(() => {\n            const trace = performance.trace(name);\n            options && options.metrics && Object.keys(options.metrics).forEach(metric => {\n              trace.putMetric(metric, options!.metrics![metric])\n            });\n            options && options.attributes && Object.keys(options.attributes).forEach(attribute => {\n              trace.putAttribute(attribute, options!.attributes![attribute])\n            });\n            const attributeSubscriptions = options && options.attribute$ ? Object.keys(options.attribute$).map(attribute =>\n              options!.attribute$![attribute].subscribe(next => trace.putAttribute(attribute, next))\n            ) : [];\n            const metricSubscriptions = options && options.metric$ ? Object.keys(options.metric$).map(metric =>\n              options!.metric$![metric].subscribe(next => trace.putMetric(metric, next))\n            ) : [];\n            const incrementOnSubscriptions = options && options.incrementMetric$ ? Object.keys(options.incrementMetric$).map(metric =>\n              options!.incrementMetric$![metric].subscribe(next => trace.incrementMetric(metric, next || undefined))\n            ) : [];\n            emitter.next(trace.start());\n            return { unsubscribe: () => {\n              trace.stop();\n              metricSubscriptions.forEach(m => m.unsubscribe());\n              incrementOnSubscriptions.forEach(m => m.unsubscribe());\n              attributeSubscriptions.forEach(m => m.unsubscribe());\n            }};\n          })\n        )\n      )\n    );\n\n  public readonly traceUntil = <T=any>(name:string, test: (a:T) => boolean, options?: TraceOptions & { orComplete?: boolean }) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n    const traceSubscription = this.trace$(name, options).subscribe();\n    return source$.pipe(\n      tap(\n        a  => test(a) && traceSubscription.unsubscribe(),\n        () => {},\n        () => options && options.orComplete && traceSubscription.unsubscribe()\n      )\n    ).subscribe(subscriber);\n  });\n\n  public readonly traceWhile = <T=any>(name:string, test: (a:T) => boolean, options?: TraceOptions & { orComplete?: boolean}) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n    let traceSubscription: Subscription|undefined;\n    return source$.pipe(\n      tap(\n        a  => {\n          if (test(a)) {\n            traceSubscription = traceSubscription || this.trace$(name, options).subscribe();\n          } else {\n            traceSubscription && traceSubscription.unsubscribe();\n            traceSubscription = undefined;\n          }\n        },\n        () => {},\n        () => options && options.orComplete && traceSubscription && traceSubscription.unsubscribe()\n      )\n    ).subscribe(subscriber);\n  });\n\n  public readonly traceUntilComplete = <T=any>(name:string, options?: TraceOptions) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n    const traceSubscription = this.trace$(name, options).subscribe();\n    return source$.pipe(\n      tap(\n        () => {},\n        () => {},\n        () => traceSubscription.unsubscribe()\n      )\n    ).subscribe(subscriber);\n  });\n\n  public readonly traceUntilFirst = <T=any>(name:string, options?: TraceOptions) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n    const traceSubscription = this.trace$(name, options).subscribe();\n    return source$.pipe(\n      tap(\n        () => traceSubscription.unsubscribe(),\n        () => {},\n        () => {}\n      )\n    ).subscribe(subscriber);\n  });\n\n  public readonly trace = <T=any>(name:string, options?: TraceOptions) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n    const traceSubscription = this.trace$(name, options).subscribe();\n    return source$.pipe(\n      tap(\n        () => traceSubscription.unsubscribe(),\n        () => {},\n        () => traceSubscription.unsubscribe()\n      )\n    ).subscribe(subscriber);\n  });\n\n}\n","import { NgModule } from '@angular/core';\nimport { AngularFirePerformance } from './performance';\n\n@NgModule({\n  providers: [ AngularFirePerformance ]\n})\nexport class AngularFirePerformanceModule {\n  constructor(_: AngularFirePerformance) {\n    // DI inject AFP here for the automatic data collection\n  } \n}\n"],"names":[],"mappings":"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"}